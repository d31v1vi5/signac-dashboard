# CircleCI configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  win: circleci/windows@2.2.0  # Enables Windows executors

jobs:
  pre-checks:
    docker:
      - image: circleci/python:3.8

    environment:
      PYTHON: python3

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: install-dependencies
          command: |
            ${PYTHON} -m pip install --user -U flake8==3.7.9

      - run:
          name: check-style
          command: |
            ${PYTHON} -m flake8 --show-source .


  linux-python-38: &linux-template
    docker:
      - image: circleci/python:3.8

    environment:
      PYTHON: python3

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Fetch submodules
          command: |
            git submodule sync
            git submodule update --init --recursive

      - run:
          name: Install dependencies
          command: |
            ${PYTHON} -m pip install --progress-bar off -U virtualenv --user
            mkdir -p ./venv
            ${PYTHON} -m virtualenv ./venv
            . venv/bin/activate
            ${PYTHON} -m pip install --progress-bar off -U coverage mock
            ${PYTHON} -m pip install --progress-bar off -U .

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            ${PYTHON} -m coverage run --source=signac_dashboard/ -m unittest discover tests/ -v
            ${PYTHON} -m coverage report -i --include="signac_dashboard*"

      - store_artifacts:
          path: test-reports
          destination: test-reports

  linux-python-36:
    <<: *linux-template
    docker:
      - image: circleci/python:3.6

  linux-python-37:
    <<: *linux-template
    docker:
      - image: circleci/python:3.7

  linux-pypy-3:
    <<: *linux-template
    docker:
      - image: pypy:3
    environment:
      PYTHON: pypy3

  windows-python-38:
    executor: win/default
    steps:
      - checkout
      - run:
          name: install python
          command: |
            choco install python --version 3.8.1 --limit-output --no-progress
      - run:
          name: install dependencies
          command: |
            python --version
            python -m pip install --progress-bar off certifi
            python -m pip install --progress-bar off -U -e .
      - run:
          name: run tests
          command: |
            python -m pytest tests/ -v


  test-deploy-pypi:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Fetch submodules
          command: |
            git submodule sync
            git submodule update --init --recursive
      - run:
          name: test-deploy-pypi
          command: |
            bash .circleci/deploy.bash testpypi

  deploy-pypi:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Fetch submodules
          command: |
            git submodule sync
            git submodule update --init --recursive
      - run:
          name: deploy-pypi
          command: |
            bash .circleci/deploy.bash pypi


workflows:
  version: 2
  test:
    jobs:
      - pre-checks
      - linux-python-36:
          requires:
            - pre-checks
      - linux-python-37:
          requires:
            - pre-checks
      - linux-python-38:
          requires:
            - pre-checks
      - linux-pypy-3:
          requires:
            - linux-python-36
      - windows-python-38:
          requires:
            - linux-python-38
      - test-deploy-pypi:
          filters:
            branches:
              only: /release\/.*/
          requires:
            - linux-python-36
            - linux-python-37
            - linux-python-38
            - linux-pypy-3
            - windows-python-38
  deploy:
    jobs:
      - deploy-pypi:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
